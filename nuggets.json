[
    "<a href=\"#\">Yup</a>. The # is a handy way to make a dead link look like a link when rendered.",
"[class*=attribute]  is how you select all elements with a class containing the passed in word. ",
"<meta> tag always has two attributes: name and content",
"<link> has two attributes: rel and href",
"favicon is the term for the little icon on the tab of a webpage",
":nth-of-type(An+B) - allows you to choose elements starting from another element. nth-of-type(3n + 3) means 'pick every 3rd element after the 3rd element.'",
"apple:only-of-type allows you to select all apples that are the only apples in their parent",
"apple:last-of-type allows you to select all apples that are the last of their kind inside their parent.",
"plate:empty allows you to select all plate elements that are empty",
"apple:not(.small) allows you to select all apples except those with .small class",
"[class^=ap] allows you to select all elements with classes that begin with \"ap\"",
"[class$=ap] allows you to select all elements with classes that end with \"ap\"",
"[class^=ap] allows you to select all elements with classes that begin with \"ap\"",
"[class$=ap] allows you to select all elements with classes that end with \"ap\"",
"plate apple:only-child, plate pickle:only-child selects plates where the only children are either apple or pickle",
"apple:last-child, pickle:last-child selects all apples and pickles that are the last children",
"plate:nth-child(3) selects all plates that are the 3rd children of their parents",
"Breakdown of CSS Ruleset: Ruleset refers to the whole express: .class {color: red}. Selector: .class; Declaration: {color:red}; Property: color; Value: red",
"padding: value value vs padding: value value value value vs padding: value - 2 arguments automatically top and bottom, 1 argument all the way around.",
"CSS position properties are named in a confusing way. Though there is a position called \"Relative,\" all positions are relative really. \"Relative\" is positioned relative to it's normal position in the flow of the document. Absolute is positioned relative to its nearest \"positioned\" ancestor. Fixed and Sticky are positioned relative to the viewport. Sticky alternates between relative to normal position and relative to the viewport.",
"CSS position: relative -- Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.",
"Difference between position: static and position: relative is that that static is not affected by top, right, bottom, left properties.",
"Check out water.css, a library of nice clean css styles",
"CHeck out Bulma, a css framework",
"check out https://dribbble.com for beautiful design ideas",
"Order matters: It is recommended to put all scripts on the bottom of the document just before the closing body tag",
"\"var\" still has its uses, but best practice is to use \"const\" where possible and \"let\" everywhere else. \"const\" makes the stored value unchangeable which limits code bugs. \"let\" limits the scope to inside a function. 'let' will not allow you to to redeclare a variable.",
"Declare multiple variables: let a,b,c = 1,2,3",
"Whereas the DOM represents the web page, the Browser Object Model (the BOM) represents the window or tab that is showing the page.",
"The primary job of the browser is to convert an HTML document into a DOM. The structure of the DOM is represented by a \"node tree\"",
"the BOM is accessible through a \"window\" variable. It is a global variable. In fact, document.querySelector() is shorthand for window.document.querySelector(). \"document\" is part of the \"window\" object.",
"The window variable has other helpful variables: history, screen, location",
"Node Tree: Each node branches off another forming the \"tree.\" Each branch of the tree ends in a node and each node contains objects. ",
"\"break\" takes your code out of a loop. \"continue\" takes your code out of the iteration and goes to the next iteration without executing upon the present iteration.",
"Because \"continue\" causes your code to skip the present iteration in a loop, don't put incrementers after \"continue.\"",
"document.onload vs window.onload. document fires earlier. window fires only when the window is ready for presentation, i.e. when the the document, css, and scripts are all loaded.",
"correct way to loop through JS object if using a for if loop if(object.hasOwnProperty(attribute)) continue",
"putting () after a function is a function call. Use function name without () when using event handling or callbacks",
"In Javascript everything is an object",
"Use typeof and instanceOf to get vital info about data types: typeof \"mytext\" //returns string. [1,3,4] instanceof Array //returns true",
"JavaScript is a prototypal language. https://stackoverflow.com/questions/186244/what-does-it-mean-that-javascript-is-a-prototype-based-language",
"Don't forget these important window object events: orientationchange, devicemotion, and storage",
"HTML has built-in form validation that goes with the type attribute on an input: <input type=\"email\"... will force @ somewhere in the entry.",
"\"required\" as an input attribute requires the entry before the form can be submitted",
"use title attribute on an input and the browser will cause a tooltip with the text stored in the title attribute to pop up",
"Regular expression is a type of object in javascript. You can use a constructor method x  = new RegExp()",
"EC2 stands for Amazon's elastic compute cloud",
"when appending items in the DOM, you can use comma to append multiple items. parent.append(child1, child2, child3)",
"Cool thing: for(let 1 = 0; i<6;i++){parent.append(document.createElement('li')). This code will dynamically create and append the li elements to the parent",
"console.dir('element') will return the selected element as an object. Helpful for debugging. ",
"With classList.add you can add multiple classes: classList.add('my-class', 'your class', 'her-class')",
"classList.remove ignores items if it doesn't have a class. It does not cause an error.",
"best practice with setInterval: store each interval in a variable like let myInterval = setInterval etc. This is important for clearInterval. It is the only way to clear interval.",
"classList.replace('a',b') replaces a with b. If it does not find a, it does nothing.",
"Cool way to make a button clickable only once. Put a .classList.remove() inside the function.,",
"Big O: How many operations a sorting algorithm takes to completely sort a very large collection of data.",
"Big O: O refers to the operations",
"Big O: n is the length of the array to be sorted.",
"One of the core principles of functional programming is to not change things. Changes lead to bugs. By dividing your code into functions, errors can happen only inside the functions rather than in the global scope.",
"A significant thing about arrow functions is the way they handle 'this'",
"arrow funcs with only single argument don't require parentheses: let myfunc = arg => {console.log('hello' + arg}",
"arrow function implicit return; let myfunc = arg => 'hello' + arg. This automatically returns WITHOUT braces",
"Do NOT modify the original array using map. It is possible to do it, but you shouldn't",
"filter returns a new array comprising all the items that meet the criteria",
"when combining filter and map, use filter first in order to make your array smaller  items.filter().map()",
"With multiple script tags the order matters. ",
"<script src=\"main.js\" type=\"module\"></script>",
"default exports and named exports",
"input has a special attribute: name. Name is very important in forms",
"input tag common attributes: name, placeholder, type, value",
"input type=\"password\" --> hidden input ********",
"input type=\"email\" causes data validation requiring an @ in the input field",
"labels for input can be made interactive with their inputs with the for=\"\" attribute. Pass input id into for. Example: When you have tiny radio buttons, if you're label is attached to the input with for=\"\" the user can click either on the label or the radio button.",
"checkbox inputs: you can assign a value that will be submitted when the form is submitted. ",
"checkbox input: checked will make the checkbox be checked. Nothing but checked is required. checked='true' and check='false' are invalid",
"DOM groups radio buttons by name. Use the 'name' attribute to coordinate them.",
"<select>: This is how you create drobdowns. <select> must be wrap a series of <option> tags",
"the attribute 'selected' on an <option> makes that option the default selection when the page loads.",
"<optgroup> allows you to organize your <option> tags nicely. ",
"commonly used input types: text, checkbox, radio, range, color, date, select, ",
"new URLSearchParams() ",
"a form's default action is to submit to its own location",
"AJAX: Asynchronous JavaScript and XML",
"const request = new XMLHttpRequest()",
"request.onreadystatechange",
"JSON.parse(): convert json object into a string",
"JSON.stringify(): convert a json string into a json object",
"when you send data from a browser to a server, it will just send nonsense like [object, object]. You have to convert it to a string.",
"You can't stringify just anything. Only arrays, objects, integers, and strings. You can't stringify a function",
"Json is data pure data. The filename can be used like a variable. There is no left-hand-side variable with json on the right. There are no modules to export",
"You must use double quotes in JSON for both the keys and values. No single quotes",
"every number in Javascript is a 64bit float",
"Basic fetch syntax. 'a' and 'b' here take on the values returned from the previous link in the chain. 'a' becomes 'whatever fetch(url) returned. 'b' becomes whatever a.json() returned. fetch(url).then(a=>a.json()).then(b=>console.log(b))",
"readline.close() must be called before your nodejs script can move on to execute the readwrite lines you put in your script.",
"The package.json file is the center of any Node.js project or npm package. It stores information about your project, similar to how the <head> section of an HTML document describes the content of a webpage.",
"for ... in x returns the indexes of an array. for ... of returns the values",
"Two of the most common type of headers: content-type and cross-origin",
"response headers. you seet these with res.setHeader()",
"access-control-allow-origin:\"*\" - will stop CORS issues",
"if an object has a key and value that are the same, you can just write the key. let my object = {name, age, date). This is the same as writing object = {name:name, age:age, date:date}",
"EXTREMELY IMPORTANT: put node_modules in .gitignore. It causes many problems because the folder becomes very large.",
"res.send() in Express allows you to send JSON types, and it will automatically set the headers appropriately.",
"As a web developer, your data will almost always be an array of objects",
"module.exports is Node specific",
"if requiring a directory, Node will automatically look for the index.js so that you don't have to explicitly include index.js. Ex: const db = require('./db') will actually require /db/index.js if there is an index.js file",
"Familiarizing yourself with a codebase: Look at the exports and requires. Look for main.js, app.js, index.js, or server.js because these are usually the controlling files.",
"when using parseInt, it is a good practice to pass 10 as the second argument. This makes sure the output is decimal rather than binary or other unreadable number. Ex: parseInt(x, 10)",
"200 Request and Response Okay",
"404 Page not Found",
"app.VERB(PATH) - Routing syntax",
"If you require a module, you can use it in a route handler; ",
"CRUD - Create Retrieve Update Delete",
"Craft your user stories using CRUD language",
"MVC is conceptual organizer for your code. CRUD is a conceptual organizer for your database",
"Normally, your database will run on the same computer as your express app",
"migration in database speak means \"steps that take place to create a model.\"",
"\"varchar\" in SQL speak means \"variable character,\" a variable of data type string.",
"a schema is a description of the structure of a database.",
"bcrypt is a crypto library that allows you to safely store passwords"

]